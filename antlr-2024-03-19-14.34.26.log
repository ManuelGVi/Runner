2024-03-19 14:34:25:748 grammar LogManager.java:25 before: (COMBINED_GRAMMAR Dictio (RULES (RULE main (BLOCK (ALT LETS RUN LLAVEA (? (BLOCK (ALT content))) LLAVEC))) (RULE content (BLOCK (ALT (+ (BLOCK (ALT condif) (ALT imprime) (ALT declara) (ALT asigna)))))) (RULE condif (BLOCK (ALT IF PARA siono PARC LLAVEA content LLAVEC (? (BLOCK (ALT deotro)))))) (RULE siono (BLOCK (ALT expr (= op (BLOCK (ALT MAYORQUE) (ALT MENORQUE) (ALT IGUAL) (ALT DIFERENTE))) expr) (ALT VERDAD) (ALT FALSO))) (RULE deotro (BLOCK (ALT ELSE LLAVEA content LLAVEC))) (RULE imprime (BLOCK (ALT IMP PARA (BLOCK (ALT textobteiner) (ALT expr)) (? (BLOCK (ALT COMA expr))) PARC SC))) (RULE declara (BLOCK (ALT COMP ID (? (BLOCK (ALT EQU expr))) SC))) (RULE asigna (BLOCK (ALT ID EQU expr SC))) (RULE expr (BLOCK (ALT expr (= operation (BLOCK (ALT ASTE) (ALT DIA))) expr) (ALT expr (= operation (BLOCK (ALT SUM) (ALT RES))) expr) (ALT (? (BLOCK (ALT RES))) INT) (ALT PARA expr PARC) (ALT ID))) (RULE textobteiner (BLOCK (ALT TEXTO))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip))) (RULE LETS (BLOCK (ALT 'lets'))) (RULE RUN (BLOCK (ALT 'run'))) (RULE COMP (BLOCK (ALT 'comp'))) (RULE IMP (BLOCK (ALT 'imp'))) (RULE IF (BLOCK (ALT 'si'))) (RULE ELSE (BLOCK (ALT 'sino'))) (RULE VERDAD (BLOCK (ALT 'true'))) (RULE FALSO (BLOCK (ALT 'false'))) (RULE ASTE (BLOCK (ALT '*'))) (RULE DIA (BLOCK (ALT '/'))) (RULE RES (BLOCK (ALT '-'))) (RULE SUM (BLOCK (ALT '+'))) (RULE EQU (BLOCK (ALT '='))) (RULE LLAVEA (BLOCK (ALT '{'))) (RULE LLAVEC (BLOCK (ALT '}'))) (RULE DOT (BLOCK (ALT '.'))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE PARA (BLOCK (ALT '('))) (RULE PARC (BLOCK (ALT ')'))) (RULE SC (BLOCK (ALT ';'))) (RULE COMA (BLOCK (ALT ','))) (RULE COMID (BLOCK (ALT '"'))) (RULE MAYORQUE (BLOCK (ALT '>'))) (RULE MENORQUE (BLOCK (ALT '<'))) (RULE IGUAL (BLOCK (ALT '=='))) (RULE DIFERENTE (BLOCK (ALT '!='))) (RULE TEXTO (BLOCK (ALT COMID (* (BLOCK (ALT (~ (SET ["\r\n]))))) COMID)))))
2024-03-19 14:34:25:772 grammar LogManager.java:25 after: (COMBINED_GRAMMAR Dictio (RULES (RULE main (BLOCK (ALT LETS RUN LLAVEA (? (BLOCK (ALT content))) LLAVEC))) (RULE content (BLOCK (ALT (+ (BLOCK (ALT condif) (ALT imprime) (ALT declara) (ALT asigna)))))) (RULE condif (BLOCK (ALT IF PARA siono PARC LLAVEA content LLAVEC (? (BLOCK (ALT deotro)))))) (RULE siono (BLOCK (ALT expr (= op (SET MAYORQUE MENORQUE IGUAL DIFERENTE)) expr) (ALT VERDAD) (ALT FALSO))) (RULE deotro (BLOCK (ALT ELSE LLAVEA content LLAVEC))) (RULE imprime (BLOCK (ALT IMP PARA (BLOCK (ALT textobteiner) (ALT expr)) (? (BLOCK (ALT COMA expr))) PARC SC))) (RULE declara (BLOCK (ALT COMP ID (? (BLOCK (ALT EQU expr))) SC))) (RULE asigna (BLOCK (ALT ID EQU expr SC))) (RULE expr (BLOCK (ALT expr (= operation (SET ASTE DIA)) expr) (ALT expr (= operation (SET SUM RES)) expr) (ALT (? (BLOCK (ALT RES))) INT) (ALT PARA expr PARC) (ALT ID))) (RULE textobteiner (BLOCK (ALT TEXTO))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip))) (RULE LETS (BLOCK (ALT 'lets'))) (RULE RUN (BLOCK (ALT 'run'))) (RULE COMP (BLOCK (ALT 'comp'))) (RULE IMP (BLOCK (ALT 'imp'))) (RULE IF (BLOCK (ALT 'si'))) (RULE ELSE (BLOCK (ALT 'sino'))) (RULE VERDAD (BLOCK (ALT 'true'))) (RULE FALSO (BLOCK (ALT 'false'))) (RULE ASTE (BLOCK (ALT '*'))) (RULE DIA (BLOCK (ALT '/'))) (RULE RES (BLOCK (ALT '-'))) (RULE SUM (BLOCK (ALT '+'))) (RULE EQU (BLOCK (ALT '='))) (RULE LLAVEA (BLOCK (ALT '{'))) (RULE LLAVEC (BLOCK (ALT '}'))) (RULE DOT (BLOCK (ALT '.'))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE PARA (BLOCK (ALT '('))) (RULE PARC (BLOCK (ALT ')'))) (RULE SC (BLOCK (ALT ';'))) (RULE COMA (BLOCK (ALT ','))) (RULE COMID (BLOCK (ALT '"'))) (RULE MAYORQUE (BLOCK (ALT '>'))) (RULE MENORQUE (BLOCK (ALT '<'))) (RULE IGUAL (BLOCK (ALT '=='))) (RULE DIFERENTE (BLOCK (ALT '!='))) (RULE TEXTO (BLOCK (ALT COMID (* (BLOCK (ALT (~ (SET ["\r\n]))))) COMID)))))
2024-03-19 14:34:25:802 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR Dictio (RULES (RULE main (BLOCK (ALT LETS RUN LLAVEA (? (BLOCK (ALT content))) LLAVEC))) (RULE content (BLOCK (ALT (+ (BLOCK (ALT condif) (ALT imprime) (ALT declara) (ALT asigna)))))) (RULE condif (BLOCK (ALT IF PARA siono PARC LLAVEA content LLAVEC (? (BLOCK (ALT deotro)))))) (RULE siono (BLOCK (ALT expr (= op (SET MAYORQUE MENORQUE IGUAL DIFERENTE)) expr) (ALT VERDAD) (ALT FALSO))) (RULE deotro (BLOCK (ALT ELSE LLAVEA content LLAVEC))) (RULE imprime (BLOCK (ALT IMP PARA (BLOCK (ALT textobteiner) (ALT expr)) (? (BLOCK (ALT COMA expr))) PARC SC))) (RULE declara (BLOCK (ALT COMP ID (? (BLOCK (ALT EQU expr))) SC))) (RULE asigna (BLOCK (ALT ID EQU expr SC))) (RULE expr (BLOCK (ALT expr (= operation (SET ASTE DIA)) expr) (ALT expr (= operation (SET SUM RES)) expr) (ALT (? (BLOCK (ALT RES))) INT) (ALT PARA expr PARC) (ALT ID))) (RULE textobteiner (BLOCK (ALT TEXTO)))))
2024-03-19 14:34:25:802 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR DictioLexer (RULES (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip))) (RULE LETS (BLOCK (ALT 'lets'))) (RULE RUN (BLOCK (ALT 'run'))) (RULE COMP (BLOCK (ALT 'comp'))) (RULE IMP (BLOCK (ALT 'imp'))) (RULE IF (BLOCK (ALT 'si'))) (RULE ELSE (BLOCK (ALT 'sino'))) (RULE VERDAD (BLOCK (ALT 'true'))) (RULE FALSO (BLOCK (ALT 'false'))) (RULE ASTE (BLOCK (ALT '*'))) (RULE DIA (BLOCK (ALT '/'))) (RULE RES (BLOCK (ALT '-'))) (RULE SUM (BLOCK (ALT '+'))) (RULE EQU (BLOCK (ALT '='))) (RULE LLAVEA (BLOCK (ALT '{'))) (RULE LLAVEC (BLOCK (ALT '}'))) (RULE DOT (BLOCK (ALT '.'))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE PARA (BLOCK (ALT '('))) (RULE PARC (BLOCK (ALT ')'))) (RULE SC (BLOCK (ALT ';'))) (RULE COMA (BLOCK (ALT ','))) (RULE COMID (BLOCK (ALT '"'))) (RULE MAYORQUE (BLOCK (ALT '>'))) (RULE MENORQUE (BLOCK (ALT '<'))) (RULE IGUAL (BLOCK (ALT '=='))) (RULE DIFERENTE (BLOCK (ALT '!='))) (RULE TEXTO (BLOCK (ALT COMID (* (BLOCK (ALT (~ (SET ["\r\n]))))) COMID)))))
2024-03-19 14:34:26:082 left-recursion LogManager.java:25 expr
    :   ( {} RES<tokenIndex=188>? INT<tokenIndex=191>  
        | PARA<tokenIndex=198> expr<tokenIndex=200> PARC<tokenIndex=202>  
        | ID<tokenIndex=209>   
        )
        (
          {this.precpred(this._ctx, 5)}?<p=5> operation=(ASTE<tokenIndex=159>|DIA<tokenIndex=161>) expr<tokenIndex=164,p=6>
                  | {this.precpred(this._ctx, 4)}?<p=4> operation=(SUM<tokenIndex=176>|RES<tokenIndex=178>) expr<tokenIndex=181,p=5>
        )*
    ;
2024-03-19 14:34:26:092 grammar LogManager.java:25 added: (RULE expr (BLOCK (ALT (BLOCK (ALT {} (? (BLOCK (ALT (RES (ELEMENT_OPTIONS (= tokenIndex 188)))))) (INT (ELEMENT_OPTIONS (= tokenIndex 191)))) (ALT (PARA (ELEMENT_OPTIONS (= tokenIndex 198))) (expr (ELEMENT_OPTIONS (= tokenIndex 200))) (PARC (ELEMENT_OPTIONS (= tokenIndex 202)))) (ALT (ID (ELEMENT_OPTIONS (= tokenIndex 209))))) (* (BLOCK (ALT ({this.precpred(this._ctx, 5)}? (ELEMENT_OPTIONS (= p 5))) (= operation (SET (ASTE (ELEMENT_OPTIONS (= tokenIndex 159))) (DIA (ELEMENT_OPTIONS (= tokenIndex 161))))) (expr (ELEMENT_OPTIONS (= tokenIndex 164) (= p 6)))) (ALT ({this.precpred(this._ctx, 4)}? (ELEMENT_OPTIONS (= p 4))) (= operation (SET (SUM (ELEMENT_OPTIONS (= tokenIndex 176))) (RES (ELEMENT_OPTIONS (= tokenIndex 178))))) (expr (ELEMENT_OPTIONS (= tokenIndex 181) (= p 5)))))))))
2024-03-19 14:34:26:095 semantics LogManager.java:25 tokens={EOF=-1, WS=1, LETS=2, RUN=3, COMP=4, IMP=5, IF=6, ELSE=7, VERDAD=8, FALSO=9, ASTE=10, DIA=11, RES=12, SUM=13, EQU=14, LLAVEA=15, LLAVEC=16, DOT=17, ID=18, INT=19, PARA=20, PARC=21, SC=22, COMA=23, COMID=24, MAYORQUE=25, MENORQUE=26, IGUAL=27, DIFERENTE=28, TEXTO=29}
2024-03-19 14:34:26:095 semantics LogManager.java:25 strings={'lets'=2, 'run'=3, 'comp'=4, 'imp'=5, 'si'=6, 'sino'=7, 'true'=8, 'false'=9, '*'=10, '/'=11, '-'=12, '+'=13, '='=14, '{'=15, '}'=16, '.'=17, '('=20, ')'=21, ';'=22, ','=23, '"'=24, '>'=25, '<'=26, '=='=27, '!='=28}
2024-03-19 14:34:26:111 LL1 LogManager.java:25 
DECISION 0 in rule main
2024-03-19 14:34:26:112 LL1 LogManager.java:25 look=[{4..6, 18}, 16]
2024-03-19 14:34:26:112 LL1 LogManager.java:25 LL(1)? true
2024-03-19 14:34:26:112 LL1 LogManager.java:25 
DECISION 1 in rule content
2024-03-19 14:34:26:113 LL1 LogManager.java:25 look=[6, 5, 4, 18]
2024-03-19 14:34:26:113 LL1 LogManager.java:25 LL(1)? true
2024-03-19 14:34:26:113 LL1 LogManager.java:25 
DECISION 2 in rule content
2024-03-19 14:34:26:113 LL1 LogManager.java:25 look=[{4..6, 18}, 16]
2024-03-19 14:34:26:113 LL1 LogManager.java:25 LL(1)? true
2024-03-19 14:34:26:113 LL1 LogManager.java:25 
DECISION 3 in rule condif
2024-03-19 14:34:26:114 LL1 LogManager.java:25 look=[7, {4..6, 16, 18}]
2024-03-19 14:34:26:114 LL1 LogManager.java:25 LL(1)? true
2024-03-19 14:34:26:114 LL1 LogManager.java:25 
DECISION 4 in rule siono
2024-03-19 14:34:26:114 LL1 LogManager.java:25 look=[{12, 18..20}, 8, 9]
2024-03-19 14:34:26:114 LL1 LogManager.java:25 LL(1)? true
2024-03-19 14:34:26:114 LL1 LogManager.java:25 
DECISION 5 in rule imprime
2024-03-19 14:34:26:114 LL1 LogManager.java:25 look=[29, {12, 18..20}]
2024-03-19 14:34:26:114 LL1 LogManager.java:25 LL(1)? true
2024-03-19 14:34:26:115 LL1 LogManager.java:25 
DECISION 6 in rule imprime
2024-03-19 14:34:26:115 LL1 LogManager.java:25 look=[23, 21]
2024-03-19 14:34:26:115 LL1 LogManager.java:25 LL(1)? true
2024-03-19 14:34:26:115 LL1 LogManager.java:25 
DECISION 7 in rule declara
2024-03-19 14:34:26:115 LL1 LogManager.java:25 look=[14, 22]
2024-03-19 14:34:26:115 LL1 LogManager.java:25 LL(1)? true
2024-03-19 14:34:26:115 LL1 LogManager.java:25 
DECISION 8 in rule expr
2024-03-19 14:34:26:116 LL1 LogManager.java:25 look=[12, 19]
2024-03-19 14:34:26:116 LL1 LogManager.java:25 LL(1)? true
2024-03-19 14:34:26:116 LL1 LogManager.java:25 
DECISION 9 in rule expr
2024-03-19 14:34:26:116 LL1 LogManager.java:25 look=[{12, 19}, 20, 18]
2024-03-19 14:34:26:116 LL1 LogManager.java:25 LL(1)? true
2024-03-19 14:34:26:116 LL1 LogManager.java:25 
DECISION 10 in rule expr
2024-03-19 14:34:26:116 LL1 LogManager.java:25 look=[null, null]
2024-03-19 14:34:26:116 LL1 LogManager.java:25 LL(1)? false
2024-03-19 14:34:26:117 LL1 LogManager.java:25 
DECISION 11 in rule expr
2024-03-19 14:34:26:117 LL1 LogManager.java:25 look=[null, null]
2024-03-19 14:34:26:117 LL1 LogManager.java:25 LL(1)? false
2024-03-19 14:34:26:149 action-translator LogManager.java:25 translate 
2024-03-19 14:34:26:151 action-translator LogManager.java:25 translate this.precpred(this._ctx, 5)
2024-03-19 14:34:26:152 action-translator LogManager.java:25 translate this.precpred(this._ctx, 4)
2024-03-19 14:34:26:154 action-translator LogManager.java:25 translate this.precpred(this._ctx, 5)
2024-03-19 14:34:26:154 action-translator LogManager.java:25 translate this.precpred(this._ctx, 4)
