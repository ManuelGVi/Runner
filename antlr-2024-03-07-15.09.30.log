2024-03-07 15:09:29:659 grammar LogManager.java:25 before: (COMBINED_GRAMMAR Dictio (RULES (RULE main (BLOCK (ALT LETS RUN LLAVEA (? (BLOCK (ALT content))) LLAVEC))) (RULE content (BLOCK (ALT (+ (BLOCK (ALT imprime)))) (ALT (+ (BLOCK (ALT declara)))) (ALT (+ (BLOCK (ALT asigna)))))) (RULE imprime (BLOCK (ALT IMP PARA COMID TEXTO COMID (? (BLOCK (ALT COMA ID))) PARC SC))) (RULE declara (BLOCK (ALT COMP ID (? (BLOCK (ALT EQU expr))) SC))) (RULE asigna (BLOCK (ALT ID EQU expr SC))) (RULE expr (BLOCK (ALT expr (= operation (BLOCK (ALT ASTE) (ALT DIA))) expr) (ALT expr (= operation (BLOCK (ALT SUM) (ALT RES))) expr) (ALT (? (BLOCK (ALT RES))) INT) (ALT PARA expr PARC) (ALT ID))) (RULE LETS (BLOCK (ALT 'lets'))) (RULE RUN (BLOCK (ALT 'run'))) (RULE COMP (BLOCK (ALT 'comp'))) (RULE IMP (BLOCK (ALT 'imp'))) (RULE ASTE (BLOCK (ALT '*'))) (RULE DIA (BLOCK (ALT '/'))) (RULE RES (BLOCK (ALT '-'))) (RULE SUM (BLOCK (ALT '+'))) (RULE EQU (BLOCK (ALT '='))) (RULE LLAVEA (BLOCK (ALT '{'))) (RULE LLAVEC (BLOCK (ALT '}'))) (RULE DOT (BLOCK (ALT '.'))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE PARA (BLOCK (ALT '('))) (RULE PARC (BLOCK (ALT ')'))) (RULE SC (BLOCK (ALT ';'))) (RULE COMA (BLOCK (ALT ','))) (RULE COMID (BLOCK (ALT '"'))) (RULE TEXTO (BLOCK (ALT (+ (BLOCK (ALT .)))))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2024-03-07 15:09:29:675 grammar LogManager.java:25 after: (COMBINED_GRAMMAR Dictio (RULES (RULE main (BLOCK (ALT LETS RUN LLAVEA (? (BLOCK (ALT content))) LLAVEC))) (RULE content (BLOCK (ALT (+ (BLOCK (ALT imprime)))) (ALT (+ (BLOCK (ALT declara)))) (ALT (+ (BLOCK (ALT asigna)))))) (RULE imprime (BLOCK (ALT IMP PARA COMID TEXTO COMID (? (BLOCK (ALT COMA ID))) PARC SC))) (RULE declara (BLOCK (ALT COMP ID (? (BLOCK (ALT EQU expr))) SC))) (RULE asigna (BLOCK (ALT ID EQU expr SC))) (RULE expr (BLOCK (ALT expr (= operation (SET ASTE DIA)) expr) (ALT expr (= operation (SET SUM RES)) expr) (ALT (? (BLOCK (ALT RES))) INT) (ALT PARA expr PARC) (ALT ID))) (RULE LETS (BLOCK (ALT 'lets'))) (RULE RUN (BLOCK (ALT 'run'))) (RULE COMP (BLOCK (ALT 'comp'))) (RULE IMP (BLOCK (ALT 'imp'))) (RULE ASTE (BLOCK (ALT '*'))) (RULE DIA (BLOCK (ALT '/'))) (RULE RES (BLOCK (ALT '-'))) (RULE SUM (BLOCK (ALT '+'))) (RULE EQU (BLOCK (ALT '='))) (RULE LLAVEA (BLOCK (ALT '{'))) (RULE LLAVEC (BLOCK (ALT '}'))) (RULE DOT (BLOCK (ALT '.'))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE PARA (BLOCK (ALT '('))) (RULE PARC (BLOCK (ALT ')'))) (RULE SC (BLOCK (ALT ';'))) (RULE COMA (BLOCK (ALT ','))) (RULE COMID (BLOCK (ALT '"'))) (RULE TEXTO (BLOCK (ALT (+ (BLOCK (ALT .)))))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2024-03-07 15:09:29:706 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR Dictio (RULES (RULE main (BLOCK (ALT LETS RUN LLAVEA (? (BLOCK (ALT content))) LLAVEC))) (RULE content (BLOCK (ALT (+ (BLOCK (ALT imprime)))) (ALT (+ (BLOCK (ALT declara)))) (ALT (+ (BLOCK (ALT asigna)))))) (RULE imprime (BLOCK (ALT IMP PARA COMID TEXTO COMID (? (BLOCK (ALT COMA ID))) PARC SC))) (RULE declara (BLOCK (ALT COMP ID (? (BLOCK (ALT EQU expr))) SC))) (RULE asigna (BLOCK (ALT ID EQU expr SC))) (RULE expr (BLOCK (ALT expr (= operation (SET ASTE DIA)) expr) (ALT expr (= operation (SET SUM RES)) expr) (ALT (? (BLOCK (ALT RES))) INT) (ALT PARA expr PARC) (ALT ID)))))
2024-03-07 15:09:29:706 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR DictioLexer (RULES (RULE LETS (BLOCK (ALT 'lets'))) (RULE RUN (BLOCK (ALT 'run'))) (RULE COMP (BLOCK (ALT 'comp'))) (RULE IMP (BLOCK (ALT 'imp'))) (RULE ASTE (BLOCK (ALT '*'))) (RULE DIA (BLOCK (ALT '/'))) (RULE RES (BLOCK (ALT '-'))) (RULE SUM (BLOCK (ALT '+'))) (RULE EQU (BLOCK (ALT '='))) (RULE LLAVEA (BLOCK (ALT '{'))) (RULE LLAVEC (BLOCK (ALT '}'))) (RULE DOT (BLOCK (ALT '.'))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE PARA (BLOCK (ALT '('))) (RULE PARC (BLOCK (ALT ')'))) (RULE SC (BLOCK (ALT ';'))) (RULE COMA (BLOCK (ALT ','))) (RULE COMID (BLOCK (ALT '"'))) (RULE TEXTO (BLOCK (ALT (+ (BLOCK (ALT .)))))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2024-03-07 15:09:30:051 left-recursion LogManager.java:25 expr
    :   ( {} RES<tokenIndex=127>? INT<tokenIndex=130>  
        | PARA<tokenIndex=137> expr<tokenIndex=139> PARC<tokenIndex=141>  
        | ID<tokenIndex=148>   
        )
        (
          {this.precpred(this._ctx, 5)}?<p=5> operation=(ASTE<tokenIndex=98>|DIA<tokenIndex=100>) expr<tokenIndex=103,p=6>
                  | {this.precpred(this._ctx, 4)}?<p=4> operation=(SUM<tokenIndex=115>|RES<tokenIndex=117>) expr<tokenIndex=120,p=5>
        )*
    ;
2024-03-07 15:09:30:067 grammar LogManager.java:25 added: (RULE expr (BLOCK (ALT (BLOCK (ALT {} (? (BLOCK (ALT (RES (ELEMENT_OPTIONS (= tokenIndex 127)))))) (INT (ELEMENT_OPTIONS (= tokenIndex 130)))) (ALT (PARA (ELEMENT_OPTIONS (= tokenIndex 137))) (expr (ELEMENT_OPTIONS (= tokenIndex 139))) (PARC (ELEMENT_OPTIONS (= tokenIndex 141)))) (ALT (ID (ELEMENT_OPTIONS (= tokenIndex 148))))) (* (BLOCK (ALT ({this.precpred(this._ctx, 5)}? (ELEMENT_OPTIONS (= p 5))) (= operation (SET (ASTE (ELEMENT_OPTIONS (= tokenIndex 98))) (DIA (ELEMENT_OPTIONS (= tokenIndex 100))))) (expr (ELEMENT_OPTIONS (= tokenIndex 103) (= p 6)))) (ALT ({this.precpred(this._ctx, 4)}? (ELEMENT_OPTIONS (= p 4))) (= operation (SET (SUM (ELEMENT_OPTIONS (= tokenIndex 115))) (RES (ELEMENT_OPTIONS (= tokenIndex 117))))) (expr (ELEMENT_OPTIONS (= tokenIndex 120) (= p 5)))))))))
2024-03-07 15:09:30:067 semantics LogManager.java:25 tokens={EOF=-1, LETS=1, RUN=2, COMP=3, IMP=4, ASTE=5, DIA=6, RES=7, SUM=8, EQU=9, LLAVEA=10, LLAVEC=11, DOT=12, ID=13, INT=14, PARA=15, PARC=16, SC=17, COMA=18, COMID=19, TEXTO=20, WS=21}
2024-03-07 15:09:30:067 semantics LogManager.java:25 strings={'lets'=1, 'run'=2, 'comp'=3, 'imp'=4, '*'=5, '/'=6, '-'=7, '+'=8, '='=9, '{'=10, '}'=11, '.'=12, '('=15, ')'=16, ';'=17, ','=18, '"'=19}
2024-03-07 15:09:30:091 LL1 LogManager.java:25 
DECISION 0 in rule main
2024-03-07 15:09:30:091 LL1 LogManager.java:25 look=[{3..4, 13}, 11]
2024-03-07 15:09:30:091 LL1 LogManager.java:25 LL(1)? true
2024-03-07 15:09:30:091 LL1 LogManager.java:25 
DECISION 1 in rule content
2024-03-07 15:09:30:091 LL1 LogManager.java:25 look=[4, 11]
2024-03-07 15:09:30:091 LL1 LogManager.java:25 LL(1)? true
2024-03-07 15:09:30:091 LL1 LogManager.java:25 
DECISION 2 in rule content
2024-03-07 15:09:30:091 LL1 LogManager.java:25 look=[3, 11]
2024-03-07 15:09:30:091 LL1 LogManager.java:25 LL(1)? true
2024-03-07 15:09:30:091 LL1 LogManager.java:25 
DECISION 3 in rule content
2024-03-07 15:09:30:091 LL1 LogManager.java:25 look=[13, 11]
2024-03-07 15:09:30:091 LL1 LogManager.java:25 LL(1)? true
2024-03-07 15:09:30:091 LL1 LogManager.java:25 
DECISION 4 in rule content
2024-03-07 15:09:30:091 LL1 LogManager.java:25 look=[4, 3, 13]
2024-03-07 15:09:30:091 LL1 LogManager.java:25 LL(1)? true
2024-03-07 15:09:30:091 LL1 LogManager.java:25 
DECISION 5 in rule imprime
2024-03-07 15:09:30:091 LL1 LogManager.java:25 look=[18, 16]
2024-03-07 15:09:30:091 LL1 LogManager.java:25 LL(1)? true
2024-03-07 15:09:30:091 LL1 LogManager.java:25 
DECISION 6 in rule declara
2024-03-07 15:09:30:091 LL1 LogManager.java:25 look=[9, 17]
2024-03-07 15:09:30:091 LL1 LogManager.java:25 LL(1)? true
2024-03-07 15:09:30:091 LL1 LogManager.java:25 
DECISION 7 in rule expr
2024-03-07 15:09:30:091 LL1 LogManager.java:25 look=[7, 14]
2024-03-07 15:09:30:091 LL1 LogManager.java:25 LL(1)? true
2024-03-07 15:09:30:091 LL1 LogManager.java:25 
DECISION 8 in rule expr
2024-03-07 15:09:30:091 LL1 LogManager.java:25 look=[{7, 14}, 15, 13]
2024-03-07 15:09:30:091 LL1 LogManager.java:25 LL(1)? true
2024-03-07 15:09:30:091 LL1 LogManager.java:25 
DECISION 9 in rule expr
2024-03-07 15:09:30:091 LL1 LogManager.java:25 look=[null, null]
2024-03-07 15:09:30:091 LL1 LogManager.java:25 LL(1)? false
2024-03-07 15:09:30:091 LL1 LogManager.java:25 
DECISION 10 in rule expr
2024-03-07 15:09:30:091 LL1 LogManager.java:25 look=[null, null]
2024-03-07 15:09:30:091 LL1 LogManager.java:25 LL(1)? false
2024-03-07 15:09:30:107 action-translator LogManager.java:25 translate 
2024-03-07 15:09:30:107 action-translator LogManager.java:25 translate this.precpred(this._ctx, 5)
2024-03-07 15:09:30:107 action-translator LogManager.java:25 translate this.precpred(this._ctx, 4)
2024-03-07 15:09:30:123 action-translator LogManager.java:25 translate this.precpred(this._ctx, 5)
2024-03-07 15:09:30:123 action-translator LogManager.java:25 translate this.precpred(this._ctx, 4)
