2024-04-09 00:13:22:441 grammar LogManager.java:25 before: (COMBINED_GRAMMAR Dictio (RULES (RULE main (BLOCK (ALT LETS RUN LLAVEA (? (BLOCK (ALT content))) LLAVEC))) (RULE content (BLOCK (ALT (+ (BLOCK (ALT condif) (ALT imprime) (ALT declara) (ALT asigna)))))) (RULE condif (BLOCK (ALT IF PARA siono PARC LLAVEA content LLAVEC (? (BLOCK (ALT deotro)))))) (RULE siono (BLOCK (ALT expr (= op (BLOCK (ALT MAYORQUE) (ALT MENORQUE) (ALT IGUAL) (ALT DIFERENTE))) expr) (ALT VERDAD) (ALT FALSO))) (RULE deotro (BLOCK (ALT deotro condif) (ALT ELSE LLAVEA content LLAVEC))) (RULE imprime (BLOCK (ALT IMP PARA (BLOCK (ALT textobteiner) (ALT expr)) (? (BLOCK (ALT COMA expr))) PARC SC))) (RULE declara (BLOCK (ALT COMP ID (? (BLOCK (ALT EQU expr))) SC))) (RULE asigna (BLOCK (ALT ID EQU expr SC))) (RULE expr (BLOCK (ALT expr (= operation (BLOCK (ALT ASTE) (ALT DIA))) expr) (ALT expr (= operation (BLOCK (ALT SUM) (ALT RES))) expr) (ALT (? (BLOCK (ALT RES))) INT) (ALT PARA expr PARC) (ALT ID))) (RULE textobteiner (BLOCK (ALT TEXTO))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip))) (RULE COMENTARIO (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT (~ (SET [\r\n])))))) skip))) (RULE LETS (BLOCK (ALT 'lets'))) (RULE RUN (BLOCK (ALT 'run'))) (RULE COMP (BLOCK (ALT 'comp'))) (RULE IMP (BLOCK (ALT 'imp'))) (RULE IF (BLOCK (ALT 'si'))) (RULE ELSE (BLOCK (ALT 'sino'))) (RULE VERDAD (BLOCK (ALT 'true'))) (RULE FALSO (BLOCK (ALT 'false'))) (RULE ASTE (BLOCK (ALT '*'))) (RULE DIA (BLOCK (ALT '/'))) (RULE RES (BLOCK (ALT '-'))) (RULE SUM (BLOCK (ALT '+'))) (RULE EQU (BLOCK (ALT '='))) (RULE LLAVEA (BLOCK (ALT '{'))) (RULE LLAVEC (BLOCK (ALT '}'))) (RULE DOT (BLOCK (ALT '.'))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE PARA (BLOCK (ALT '('))) (RULE PARC (BLOCK (ALT ')'))) (RULE SC (BLOCK (ALT ';'))) (RULE COMA (BLOCK (ALT ','))) (RULE COMID (BLOCK (ALT '"'))) (RULE MAYORQUE (BLOCK (ALT '>'))) (RULE MENORQUE (BLOCK (ALT '<'))) (RULE IGUAL (BLOCK (ALT '=='))) (RULE DIFERENTE (BLOCK (ALT '!='))) (RULE TEXTO (BLOCK (ALT COMID (* (BLOCK (ALT (~ (SET ["\r\n]))))) COMID)))))
2024-04-09 00:13:22:455 grammar LogManager.java:25 after: (COMBINED_GRAMMAR Dictio (RULES (RULE main (BLOCK (ALT LETS RUN LLAVEA (? (BLOCK (ALT content))) LLAVEC))) (RULE content (BLOCK (ALT (+ (BLOCK (ALT condif) (ALT imprime) (ALT declara) (ALT asigna)))))) (RULE condif (BLOCK (ALT IF PARA siono PARC LLAVEA content LLAVEC (? (BLOCK (ALT deotro)))))) (RULE siono (BLOCK (ALT expr (= op (SET MAYORQUE MENORQUE IGUAL DIFERENTE)) expr) (ALT VERDAD) (ALT FALSO))) (RULE deotro (BLOCK (ALT deotro condif) (ALT ELSE LLAVEA content LLAVEC))) (RULE imprime (BLOCK (ALT IMP PARA (BLOCK (ALT textobteiner) (ALT expr)) (? (BLOCK (ALT COMA expr))) PARC SC))) (RULE declara (BLOCK (ALT COMP ID (? (BLOCK (ALT EQU expr))) SC))) (RULE asigna (BLOCK (ALT ID EQU expr SC))) (RULE expr (BLOCK (ALT expr (= operation (SET ASTE DIA)) expr) (ALT expr (= operation (SET SUM RES)) expr) (ALT (? (BLOCK (ALT RES))) INT) (ALT PARA expr PARC) (ALT ID))) (RULE textobteiner (BLOCK (ALT TEXTO))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip))) (RULE COMENTARIO (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT (~ (SET [\r\n])))))) skip))) (RULE LETS (BLOCK (ALT 'lets'))) (RULE RUN (BLOCK (ALT 'run'))) (RULE COMP (BLOCK (ALT 'comp'))) (RULE IMP (BLOCK (ALT 'imp'))) (RULE IF (BLOCK (ALT 'si'))) (RULE ELSE (BLOCK (ALT 'sino'))) (RULE VERDAD (BLOCK (ALT 'true'))) (RULE FALSO (BLOCK (ALT 'false'))) (RULE ASTE (BLOCK (ALT '*'))) (RULE DIA (BLOCK (ALT '/'))) (RULE RES (BLOCK (ALT '-'))) (RULE SUM (BLOCK (ALT '+'))) (RULE EQU (BLOCK (ALT '='))) (RULE LLAVEA (BLOCK (ALT '{'))) (RULE LLAVEC (BLOCK (ALT '}'))) (RULE DOT (BLOCK (ALT '.'))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE PARA (BLOCK (ALT '('))) (RULE PARC (BLOCK (ALT ')'))) (RULE SC (BLOCK (ALT ';'))) (RULE COMA (BLOCK (ALT ','))) (RULE COMID (BLOCK (ALT '"'))) (RULE MAYORQUE (BLOCK (ALT '>'))) (RULE MENORQUE (BLOCK (ALT '<'))) (RULE IGUAL (BLOCK (ALT '=='))) (RULE DIFERENTE (BLOCK (ALT '!='))) (RULE TEXTO (BLOCK (ALT COMID (* (BLOCK (ALT (~ (SET ["\r\n]))))) COMID)))))
2024-04-09 00:13:22:471 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR Dictio (RULES (RULE main (BLOCK (ALT LETS RUN LLAVEA (? (BLOCK (ALT content))) LLAVEC))) (RULE content (BLOCK (ALT (+ (BLOCK (ALT condif) (ALT imprime) (ALT declara) (ALT asigna)))))) (RULE condif (BLOCK (ALT IF PARA siono PARC LLAVEA content LLAVEC (? (BLOCK (ALT deotro)))))) (RULE siono (BLOCK (ALT expr (= op (SET MAYORQUE MENORQUE IGUAL DIFERENTE)) expr) (ALT VERDAD) (ALT FALSO))) (RULE deotro (BLOCK (ALT deotro condif) (ALT ELSE LLAVEA content LLAVEC))) (RULE imprime (BLOCK (ALT IMP PARA (BLOCK (ALT textobteiner) (ALT expr)) (? (BLOCK (ALT COMA expr))) PARC SC))) (RULE declara (BLOCK (ALT COMP ID (? (BLOCK (ALT EQU expr))) SC))) (RULE asigna (BLOCK (ALT ID EQU expr SC))) (RULE expr (BLOCK (ALT expr (= operation (SET ASTE DIA)) expr) (ALT expr (= operation (SET SUM RES)) expr) (ALT (? (BLOCK (ALT RES))) INT) (ALT PARA expr PARC) (ALT ID))) (RULE textobteiner (BLOCK (ALT TEXTO)))))
2024-04-09 00:13:22:471 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR DictioLexer (RULES (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip))) (RULE COMENTARIO (BLOCK (LEXER_ALT_ACTION (ALT '//' (* (BLOCK (ALT (~ (SET [\r\n])))))) skip))) (RULE LETS (BLOCK (ALT 'lets'))) (RULE RUN (BLOCK (ALT 'run'))) (RULE COMP (BLOCK (ALT 'comp'))) (RULE IMP (BLOCK (ALT 'imp'))) (RULE IF (BLOCK (ALT 'si'))) (RULE ELSE (BLOCK (ALT 'sino'))) (RULE VERDAD (BLOCK (ALT 'true'))) (RULE FALSO (BLOCK (ALT 'false'))) (RULE ASTE (BLOCK (ALT '*'))) (RULE DIA (BLOCK (ALT '/'))) (RULE RES (BLOCK (ALT '-'))) (RULE SUM (BLOCK (ALT '+'))) (RULE EQU (BLOCK (ALT '='))) (RULE LLAVEA (BLOCK (ALT '{'))) (RULE LLAVEC (BLOCK (ALT '}'))) (RULE DOT (BLOCK (ALT '.'))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE PARA (BLOCK (ALT '('))) (RULE PARC (BLOCK (ALT ')'))) (RULE SC (BLOCK (ALT ';'))) (RULE COMA (BLOCK (ALT ','))) (RULE COMID (BLOCK (ALT '"'))) (RULE MAYORQUE (BLOCK (ALT '>'))) (RULE MENORQUE (BLOCK (ALT '<'))) (RULE IGUAL (BLOCK (ALT '=='))) (RULE DIFERENTE (BLOCK (ALT '!='))) (RULE TEXTO (BLOCK (ALT COMID (* (BLOCK (ALT (~ (SET ["\r\n]))))) COMID)))))
2024-04-09 00:13:22:623 left-recursion LogManager.java:25 deotro
    :   ( {} ELSE<tokenIndex=95> LLAVEA<tokenIndex=97> content<tokenIndex=99> LLAVEC<tokenIndex=101>  
        )
        (
          {this.precpred(this._ctx, 2)}?<p=2> condif<tokenIndex=89>
        )*
    ;
2024-04-09 00:13:22:626 grammar LogManager.java:25 added: (RULE deotro (BLOCK (ALT (BLOCK (ALT {} (ELSE (ELEMENT_OPTIONS (= tokenIndex 95))) (LLAVEA (ELEMENT_OPTIONS (= tokenIndex 97))) (content (ELEMENT_OPTIONS (= tokenIndex 99))) (LLAVEC (ELEMENT_OPTIONS (= tokenIndex 101))))) (* (BLOCK (ALT ({this.precpred(this._ctx, 2)}? (ELEMENT_OPTIONS (= p 2))) (condif (ELEMENT_OPTIONS (= tokenIndex 89)))))))))
2024-04-09 00:13:22:627 left-recursion LogManager.java:25 expr
    :   ( {} RES<tokenIndex=199>? INT<tokenIndex=202>  
        | PARA<tokenIndex=209> expr<tokenIndex=211> PARC<tokenIndex=213>  
        | ID<tokenIndex=220>   
        )
        (
          {this.precpred(this._ctx, 5)}?<p=5> operation=(ASTE<tokenIndex=170>|DIA<tokenIndex=172>) expr<tokenIndex=175,p=6>
                  | {this.precpred(this._ctx, 4)}?<p=4> operation=(SUM<tokenIndex=187>|RES<tokenIndex=189>) expr<tokenIndex=192,p=5>
        )*
    ;
2024-04-09 00:13:22:629 grammar LogManager.java:25 added: (RULE expr (BLOCK (ALT (BLOCK (ALT {} (? (BLOCK (ALT (RES (ELEMENT_OPTIONS (= tokenIndex 199)))))) (INT (ELEMENT_OPTIONS (= tokenIndex 202)))) (ALT (PARA (ELEMENT_OPTIONS (= tokenIndex 209))) (expr (ELEMENT_OPTIONS (= tokenIndex 211))) (PARC (ELEMENT_OPTIONS (= tokenIndex 213)))) (ALT (ID (ELEMENT_OPTIONS (= tokenIndex 220))))) (* (BLOCK (ALT ({this.precpred(this._ctx, 5)}? (ELEMENT_OPTIONS (= p 5))) (= operation (SET (ASTE (ELEMENT_OPTIONS (= tokenIndex 170))) (DIA (ELEMENT_OPTIONS (= tokenIndex 172))))) (expr (ELEMENT_OPTIONS (= tokenIndex 175) (= p 6)))) (ALT ({this.precpred(this._ctx, 4)}? (ELEMENT_OPTIONS (= p 4))) (= operation (SET (SUM (ELEMENT_OPTIONS (= tokenIndex 187))) (RES (ELEMENT_OPTIONS (= tokenIndex 189))))) (expr (ELEMENT_OPTIONS (= tokenIndex 192) (= p 5)))))))))
2024-04-09 00:13:22:631 semantics LogManager.java:25 tokens={EOF=-1, WS=1, COMENTARIO=2, LETS=3, RUN=4, COMP=5, IMP=6, IF=7, ELSE=8, VERDAD=9, FALSO=10, ASTE=11, DIA=12, RES=13, SUM=14, EQU=15, LLAVEA=16, LLAVEC=17, DOT=18, ID=19, INT=20, PARA=21, PARC=22, SC=23, COMA=24, COMID=25, MAYORQUE=26, MENORQUE=27, IGUAL=28, DIFERENTE=29, TEXTO=30}
2024-04-09 00:13:22:631 semantics LogManager.java:25 strings={'lets'=3, 'run'=4, 'comp'=5, 'imp'=6, 'si'=7, 'sino'=8, 'true'=9, 'false'=10, '*'=11, '/'=12, '-'=13, '+'=14, '='=15, '{'=16, '}'=17, '.'=18, '('=21, ')'=22, ';'=23, ','=24, '"'=25, '>'=26, '<'=27, '=='=28, '!='=29}
2024-04-09 00:13:22:636 LL1 LogManager.java:25 
DECISION 0 in rule main
2024-04-09 00:13:22:636 LL1 LogManager.java:25 look=[{5..7, 19}, 17]
2024-04-09 00:13:22:636 LL1 LogManager.java:25 LL(1)? true
2024-04-09 00:13:22:636 LL1 LogManager.java:25 
DECISION 1 in rule content
2024-04-09 00:13:22:636 LL1 LogManager.java:25 look=[7, 6, 5, 19]
2024-04-09 00:13:22:636 LL1 LogManager.java:25 LL(1)? true
2024-04-09 00:13:22:636 LL1 LogManager.java:25 
DECISION 2 in rule content
2024-04-09 00:13:22:636 LL1 LogManager.java:25 look=[{5..7, 19}, 17]
2024-04-09 00:13:22:636 LL1 LogManager.java:25 LL(1)? true
2024-04-09 00:13:22:636 LL1 LogManager.java:25 
DECISION 3 in rule condif
2024-04-09 00:13:22:637 LL1 LogManager.java:25 look=[8, null]
2024-04-09 00:13:22:637 LL1 LogManager.java:25 LL(1)? false
2024-04-09 00:13:22:637 LL1 LogManager.java:25 
DECISION 4 in rule siono
2024-04-09 00:13:22:637 LL1 LogManager.java:25 look=[{13, 19..21}, 9, 10]
2024-04-09 00:13:22:637 LL1 LogManager.java:25 LL(1)? true
2024-04-09 00:13:22:637 LL1 LogManager.java:25 
DECISION 5 in rule deotro
2024-04-09 00:13:22:637 LL1 LogManager.java:25 look=[null, null]
2024-04-09 00:13:22:637 LL1 LogManager.java:25 LL(1)? false
2024-04-09 00:13:22:637 LL1 LogManager.java:25 
DECISION 6 in rule imprime
2024-04-09 00:13:22:637 LL1 LogManager.java:25 look=[30, {13, 19..21}]
2024-04-09 00:13:22:637 LL1 LogManager.java:25 LL(1)? true
2024-04-09 00:13:22:637 LL1 LogManager.java:25 
DECISION 7 in rule imprime
2024-04-09 00:13:22:637 LL1 LogManager.java:25 look=[24, 22]
2024-04-09 00:13:22:637 LL1 LogManager.java:25 LL(1)? true
2024-04-09 00:13:22:637 LL1 LogManager.java:25 
DECISION 8 in rule declara
2024-04-09 00:13:22:637 LL1 LogManager.java:25 look=[15, 23]
2024-04-09 00:13:22:637 LL1 LogManager.java:25 LL(1)? true
2024-04-09 00:13:22:637 LL1 LogManager.java:25 
DECISION 9 in rule expr
2024-04-09 00:13:22:637 LL1 LogManager.java:25 look=[13, 20]
2024-04-09 00:13:22:637 LL1 LogManager.java:25 LL(1)? true
2024-04-09 00:13:22:637 LL1 LogManager.java:25 
DECISION 10 in rule expr
2024-04-09 00:13:22:637 LL1 LogManager.java:25 look=[{13, 20}, 21, 19]
2024-04-09 00:13:22:637 LL1 LogManager.java:25 LL(1)? true
2024-04-09 00:13:22:637 LL1 LogManager.java:25 
DECISION 11 in rule expr
2024-04-09 00:13:22:637 LL1 LogManager.java:25 look=[null, null]
2024-04-09 00:13:22:637 LL1 LogManager.java:25 LL(1)? false
2024-04-09 00:13:22:637 LL1 LogManager.java:25 
DECISION 12 in rule expr
2024-04-09 00:13:22:637 LL1 LogManager.java:25 look=[null, null]
2024-04-09 00:13:22:637 LL1 LogManager.java:25 LL(1)? false
2024-04-09 00:13:22:653 action-translator LogManager.java:25 translate 
2024-04-09 00:13:22:654 action-translator LogManager.java:25 translate this.precpred(this._ctx, 2)
2024-04-09 00:13:22:655 action-translator LogManager.java:25 translate this.precpred(this._ctx, 2)
2024-04-09 00:13:22:657 action-translator LogManager.java:25 translate 
2024-04-09 00:13:22:657 action-translator LogManager.java:25 translate this.precpred(this._ctx, 5)
2024-04-09 00:13:22:657 action-translator LogManager.java:25 translate this.precpred(this._ctx, 4)
2024-04-09 00:13:22:657 action-translator LogManager.java:25 translate this.precpred(this._ctx, 5)
2024-04-09 00:13:22:658 action-translator LogManager.java:25 translate this.precpred(this._ctx, 4)
